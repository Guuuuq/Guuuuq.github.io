<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>顾柒·Blog</title>
  
  <subtitle>山海皆可平</subtitle>
  <link href="https://guuuuq.github.io/atom.xml" rel="self"/>
  
  <link href="https://guuuuq.github.io/"/>
  <updated>2022-10-18T14:32:58.063Z</updated>
  <id>https://guuuuq.github.io/</id>
  
  <author>
    <name>顾柒</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>sqlmap使用方法</title>
    <link href="https://guuuuq.github.io/posts/undefined.html"/>
    <id>https://guuuuq.github.io/posts/undefined.html</id>
    <published>2022-10-18T13:46:55.000Z</published>
    <updated>2022-10-18T14:32:58.063Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sqlmap是什么"><a href="#sqlmap是什么" class="headerlink" title="sqlmap是什么"></a>sqlmap是什么</h1><p>sqlmap是一个自动化的sql注入工具，其主要功能是扫描，发现并利用给定的URL和sql注入漏洞，其广泛的功能和选项包括数据库指纹，枚举，数据库提权，访问目标文件系统，并在获取操作权限时执行任意命令。</p><h1 id="sqlmap基本命令"><a href="#sqlmap基本命令" class="headerlink" title="sqlmap基本命令"></a>sqlmap基本命令</h1><h2 id="1-选项"><a href="#1-选项" class="headerlink" title="1.选项"></a>1.选项</h2><p>在这些选项中必须提供至少有一个确定目标<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-h,--help  显示基本帮助信息并退出</span><br><span class="line">-hh  显示高级帮助信息并退出</span><br><span class="line">--version  显示程序版本信息并退出</span><br></pre></td></tr></table></figure></p><h2 id="2-目标"><a href="#2-目标" class="headerlink" title="2.目标"></a>2.目标</h2><p>这些选项可以用来指定如何连接到目标URL<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-u  目标URL  </span><br><span class="line">例：sqlmap -u &quot;www.abc.com/index.php?id=1&quot;</span><br><span class="line">-m  后接一个txt文件，文件中是多个url，sqlmap会自动化的检测其中的所有url。</span><br><span class="line">例：sqlmap -m target.txt</span><br><span class="line">-r  可以将一个post请求方式的数据包(bp抓包)保存在一个txt中，sqlmap会通过post方式检测目标。</span><br><span class="line">例：sqlmap -r bp.txt</span><br></pre></td></tr></table></figure></p><h2 id="3-请求"><a href="#3-请求" class="headerlink" title="3.请求"></a>3.请求</h2><p>这些选项可用于指定要测试的参数、提供自定义注入有效载荷和可选的篡改脚本。<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--method=METHOD 指定是get方法还是post方法。</span><br><span class="line">例： --method=GET --method=POST</span><br><span class="line">--random-agent  使用随机user-agent进行测试。sqlmap有一个文件中储存了各种各样的user-agent，文件在sqlmap/txt/user-agent.txt 在level&gt;=3时会检测user-agent注入。</span><br><span class="line">--proxy=PROXY 指定一个代理。</span><br><span class="line">例： --proxy=&quot;127.0.0.1:8080&quot; 使用GoAgent代理。</span><br></pre></td></tr></table></figure></p><h2 id="4-注入"><a href="#4-注入" class="headerlink" title="4.注入"></a>4.注入</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-p  测试参数</span><br><span class="line">例：  sqlmap -r bp.txt -p &quot;username&quot;</span><br><span class="line">--skip-static  跳过测试静态参数(有的时候注入有多个参数，那么有些无关紧要的参数修改后页面是没有变化的)</span><br><span class="line">--no-cast  获取数据时，sqlmap会将所有数据转换成字符串，并用空格代替null。(这个在我们注入失败的时候偶尔会见到，提示尝试使用--no-cast)</span><br><span class="line">--tamper=TAMPER 使用sqlmap自带的tamper，或者自己写的tamper，来混淆payload，通常用来绕过waf和ips。</span><br></pre></td></tr></table></figure><h2 id="5-检测"><a href="#5-检测" class="headerlink" title="5.检测"></a>5.检测</h2><p>这些选项可以用来指定在SQL盲注时如何解析和比较HTTP响应页面的内容<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">--level=LEVEL  执行测试的等级（1-5，默认为1） </span><br><span class="line">lv2：cookie; lv3：user-agent，refere; lv5：host </span><br><span class="line">在sqlmap/xml/payloads文件内可以看见各个level发送的payload  我常使用--level 3</span><br><span class="line">--risk=RISK  执行测试的风险（0-3，默认为1） </span><br><span class="line">risk 2：基于事件的测试;risk 3：or语句的测试;risk 4：update的测试</span><br><span class="line">升高风险等级会增加数据被篡改的风险。  常用就是默认1</span><br></pre></td></tr></table></figure></p><h2 id="6-枚举"><a href="#6-枚举" class="headerlink" title="6.枚举"></a>6.枚举</h2><p>这些选项可以用来列举后端数据库管理系统的信息、表中的结构和数据。 脱库时使用<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-b, --banner        获取数据库管理系统的标识</span><br><span class="line">--current-user      获取数据库管理系统当前用户</span><br><span class="line">--current-db        获取数据库管理系统当前数据库</span><br><span class="line">--hostname          获取数据库服务器的主机名称</span><br><span class="line">--is-dba            检测DBMS当前用户是否DBA</span><br><span class="line">--users             枚举数据库管理系统用户</span><br><span class="line">--passwords         枚举数据库管理系统用户密码哈希</span><br><span class="line">--privileges        枚举数据库管理系统用户的权限</span><br><span class="line">--dbs              枚举数据库管理系统数据库</span><br><span class="line">--tables           枚举DBMS数据库中的表</span><br><span class="line">--columns          枚举DBMS数据库表列</span><br><span class="line">-D                  要进行枚举的指定数据库名</span><br><span class="line">-T                  要进行枚举的指定表名</span><br><span class="line">-C                  要进行枚举的指定列名</span><br><span class="line">--dump             转储数据库表项,查询字段值</span><br><span class="line">--search           搜索列（S），表（S）和/或数据库名称（S）</span><br><span class="line">--sql-query=QUERY   要执行的SQL语句</span><br><span class="line">--sql-shell         提示交互式SQL的shell</span><br></pre></td></tr></table></figure></p><h2 id="7-文件操作"><a href="#7-文件操作" class="headerlink" title="7.文件操作"></a>7.文件操作</h2><p>这些选项可以被用来访问后端数据库管理系统的底层文件系统<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--file-read=RFILE     从后端的数据库管理系统文件系统读取文件</span><br><span class="line">--file-write=WFILE    编辑后端的数据库管理系统文件系统上的本地文件</span><br><span class="line">--file-dest=DFILE     后端的数据库管理系统写入文件的绝对路径</span><br></pre></td></tr></table></figure></p><h2 id="8-操作系统访问"><a href="#8-操作系统访问" class="headerlink" title="8.操作系统访问"></a>8.操作系统访问</h2><p>这些选项可以用于访问后端数据库管理系统的底层操作系统<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--os-cmd=OSCMD      执行操作系统命令（OSCMD）</span><br><span class="line">--os-shell          交互式的操作系统的shell</span><br></pre></td></tr></table></figure></p><h1 id="sqlmap常规步骤"><a href="#sqlmap常规步骤" class="headerlink" title="sqlmap常规步骤"></a>sqlmap常规步骤</h1><p>例题（CTFhub<em>Web</em>报错注入）</p><h3 id="1-判断是否有注入"><a href="#1-判断是否有注入" class="headerlink" title="1.判断是否有注入"></a>1.判断是否有注入</h3><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182213051.png" alt=""><br>（—batch表示自动判断）<br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182216335.png" alt=""></p><p>结果说明可以使用布尔盲注，报错注入，时间盲注</p><h3 id="2-查看所有数据库"><a href="#2-查看所有数据库" class="headerlink" title="2.查看所有数据库"></a>2.查看所有数据库</h3><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182220637.png" alt=""><br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182220834.png" alt=""><br>如图有四个数据库</p><h3 id="3-查看当前使用的数据库"><a href="#3-查看当前使用的数据库" class="headerlink" title="3.查看当前使用的数据库"></a>3.查看当前使用的数据库</h3><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182223315.png" alt=""><br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182223704.png" alt=""><br>得知当前使用的数据库名字为’sqli‘</p><h3 id="4-查看数据表"><a href="#4-查看数据表" class="headerlink" title="4.查看数据表"></a>4.查看数据表</h3><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182225160.png" alt=""><br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182226592.png" alt=""><br>当前数据库有两个表名为’flag‘和’news‘</p><h3 id="5-查看列名"><a href="#5-查看列名" class="headerlink" title="5.查看列名"></a>5.查看列名</h3><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182228662.png" alt=""><br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182228222.png" alt=""><br>如图有名为flag的列应该是flag</p><h3 id="6-查看数据"><a href="#6-查看数据" class="headerlink" title="6.查看数据"></a>6.查看数据</h3><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182230607.png" alt=""><br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182231606.png" alt=""><br>得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;sqlmap是什么&quot;&gt;&lt;a href=&quot;#sqlmap是什么&quot; class=&quot;headerlink&quot; title=&quot;sqlmap是什么&quot;&gt;&lt;/a&gt;sqlmap是什么&lt;/h1&gt;&lt;p&gt;sqlmap是一个自动化的sql注入工具，其主要功能是扫描，发现并利用给定的URL和</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CTFHub_web_信息泄露_目录遍历</title>
    <link href="https://guuuuq.github.io/posts/undefined.html"/>
    <id>https://guuuuq.github.io/posts/undefined.html</id>
    <published>2022-10-17T10:28:21.000Z</published>
    <updated>2022-10-17T10:36:54.356Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是目录遍历"><a href="#什么是目录遍历" class="headerlink" title="什么是目录遍历"></a>什么是目录遍历</h2><p>目录遍历（也称为文件路径遍历）是一个Web安全漏洞，攻击者可以利用该漏洞读取运行应用程序的服务器上的任意文件。这可能包括应用程序代码和数据，后端系统的凭据以及敏感的操作系统文件。在某些情况下，攻击者可能能够在服务器上写入任意文件，从而允许他们修改应用程序数据或行为，并最终完全控制服务器。</p><h2 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h2><p>访问靶机</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/20221017175707.png" alt=""></p><p>F12后并未发现什么有用信息</p><p>点击“点击开始寻找flag”</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/20221017180255.png" alt=""></p><p>遍历在4/4处得到flag.txt</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/20221017180445.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;什么是目录遍历&quot;&gt;&lt;a href=&quot;#什么是目录遍历&quot; class=&quot;headerlink&quot; title=&quot;什么是目录遍历&quot;&gt;&lt;/a&gt;什么是目录遍历&lt;/h2&gt;&lt;p&gt;目录遍历（也称为文件路径遍历）是一个Web安全漏洞，攻击者可以利用该漏洞读取运行应用程序的服务器上的</summary>
      
    
    
    
    
  </entry>
  
</feed>
